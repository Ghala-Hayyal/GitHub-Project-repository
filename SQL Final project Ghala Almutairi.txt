# SQL Final project Ghala Almutairi

-- 1 question Create a query that lists each movie, the film category it is 
classified in, and the number of times it has been rented out

SELECT  COUNT(rental.rental_id) AS number_of_rent,film.title, category.name

FROM category

JOIN film_category
ON film_category.category_id =category.category_id

JOIN film 
ON film.film_id = film_category.film_id

JOIN inventory
ON film.film_id = inventory.film_id 

JOIN rental
ON  rental.inventory_id = inventory.inventory_id


WHERE category.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 
                        'Music')

GROUP BY film.title, category.name

ORDER BY category.name


-- 2 question Write a query that returns the store ID for the store, the year and 
month and the number of rental orders each store has fulfilled for that month. 
Your table should include a column for each of the following: year, month, 
store ID and count of rental orders fulfilled during that month.

SELECT store_id,

DATE_PART('month', rental.rental_date) AS rental_month,

DATE_PART ('year', rental.rental_date) AS rental_year,

COUNT(*)

FROM rental

JOIN staff 

ON staff.staff_id = rental.staff_id


GROUP by rental_month,rental_year,store_id

ORDER BY staff.store_id;


-- 3 question write a query to capture the customer name, month and year of 
payment, and total payment amount for each month by these top 10 paying 
customers?

SELECT Concat(first_name,'  ',last_name) AS full_name,

DATE_TRUNC('month', payment.payment_date)AS pay_month,

COUNT(payment.amount) AS pay_countpermon, 

SUM(payment.amount) AS pay_amount

FROM  payment 

JOIN  customer
ON payment.customer_id = customer.customer_id

WHERE customer.first_name || ' ' || customer.last_name IN
(SELECT full_name
FROM
(SELECT customer.first_name || ' ' || customer.last_name AS full_name
, SUM(payment.amount) as amount_total
FROM customer
JOIN payment
ON payment.customer_id = customer.customer_id
GROUP BY full_name	
ORDER BY amount_total DESC
LIMIT 10) table1) 
AND (payment.payment_date BETWEEN '2007-01-01' AND '2008-01-01')
GROUP BY  pay_month,full_name 
ORDER BY full_name;

-- 4 question write a query to compare the payment amounts in each successive month

WITH table1 AS (SELECT (first_name || ' ' ||last_name) AS full_name,
customer.customer_id,
payment.amount,
payment.payment_date

FROM customer
JOIN payment
ON  customer.customer_id=payment.customer_id),

table2 AS (SELECT table1.customer_id
FROM table1
GROUP BY 1
ORDER BY SUM(table1.amount) DESC
LIMIT 10),


table3 AS (SELECT table1.full_name,
DATE_PART('month', table1.payment_date) AS payment_month,
DATE_PART('year', table1.payment_date) AS payment_year,
COUNT (*),
SUM(table1.amount),
SUM(table1.amount) AS total,
LEAD(SUM(table1.amount)) OVER(PARTITION BY table1.full_name
ORDER BY DATE_PART('month', table1.payment_date)) AS lead,
LEAD(SUM(table1.amount)) OVER(PARTITION BY table1.full_name ORDER BY 
DATE_PART('month', table1.payment_date)) - SUM(table1.amount) AS lead_dif
FROM table1

JOIN table2
ON table1.customer_id = table2.customer_id

WHERE table1.payment_date BETWEEN '2007-01-01' AND '2008-01-01'
GROUP BY full_name,2,3 
ORDER BY full_name,2,3)

SELECT *,
CASE   WHEN table3.lead_dif = (SELECT MAX(table3.lead_dif) FROM table3 ORDER BY 1 DESC 
LIMIT 1) THEN 'this is the customer how paid maximum difference'
ELSE NULL
END AS the_maximum
FROM table3
ORDER BY full_name;
